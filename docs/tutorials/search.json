[
  {
    "objectID": "variable-skipping.html",
    "href": "variable-skipping.html",
    "title": "Skipping of Questions in NHANES",
    "section": "",
    "text": "The NHANES data set provides a large diverse set of data to study health and other sociological and epidemiological topics on the US population. In this vignette we discuss some challenges that arise due to the manner in which the survey is deployed and delivered.\nIn many situations a survey will be designed to have some form of branching logic. The logic is typically triggered off of the response to one question and designed to ensure that questions that are no longer relevant for the interviewee are not asked. We will use the smoking cigarettes survey SMQ for cycle J (2017–2018) as the basis for our discussion, since it makes rather heavy use of branching, which we will also refer to as skipping.\n\n\n\n\n\n\n\n\nFigure 1: Questions SMQ020 and SMD030\n\n\n\nIn Figure 1 we see the documentation for two questions in the 2017–2018 survey. First, participants were asked the question SMQ020, whether or not they had smoked 100 cigarettes in their life. Those that said Yes were asked the question SMD030, at what age did they being smoking. Anyone who responded No to SMQ020 skipped over SMD030 and a number of other questions about smoking and cigarettes. The goal is to make the survey less onerous for those people, as there were over 20 questions skipped and someone who had never smoked would probably not have answers to those questions.\nWe next consider the table for SMD030. Of the 2359 people who answered Yes to SMQ020, 2285 gave an age (in years), 62 said that they never really smoked regularly, and 12 responded that they did not know. The 3497 people who answered No to SMQ020 were recorded as Missing for question SMD030. An additional 868 people, who were asked question SMD030, also had Missing entered for their response, for a total of 4365 people recorded as having a missing response for SMD030.\nThis is a common practice throughout the NHANES survey. Whenever a question is skipped for a participant, the response is recorded as Missing. However, Missing is also a possible response for participants who were asked a question. The only way to distinguish between these two very different types of missingness is to consider the responses to preceding questions to determine whether or not the question was actually asked to a particular participant.\nNow, when we analyze this data we will need to think carefully about how to deal with the data in SMD030. If we are analyzing smokers only, then the skipping is not an issue. But if we want to study obesity, for example, and we want to include smoking behavior as a predictor, we will want to be careful about using SMD030. If we use it without doing any preprocessing, then most modeling software, such as lm or glm in R, will simply remove any case (person) who has a missing value in any of their covariates. That would be quite devestating to our analysis and would in some sense invalidate it, since in that scenario only smokers would end up in the final model.\nSo, if we want to keep information on smoking in our model and we want to use the age at which someone started smoking in our analysis, then we need to find some way to encode SMD030 that does not use missing values. One choice is to set the age at which they started smoking to be their current age. Using that value one can determine the number of years they smoked by subtracting the age at which they started from their current age. For the nonsmokers this would then be 0 (zero). One could also entertain the use of survival analysis techniques with that definition. For non-smokers, we don’t know if they will start smoking in the future, but we do know that they have not started by their current age.\nOur goal in the remainder of this article is to describe tools that can help analysts easily identify any skipping behavior. The question of how to appropriately remediate skipping is potentially very complicated, and cannot easily be automated."
  },
  {
    "objectID": "variable-skipping.html#introduction",
    "href": "variable-skipping.html#introduction",
    "title": "Skipping of Questions in NHANES",
    "section": "",
    "text": "The NHANES data set provides a large diverse set of data to study health and other sociological and epidemiological topics on the US population. In this vignette we discuss some challenges that arise due to the manner in which the survey is deployed and delivered.\nIn many situations a survey will be designed to have some form of branching logic. The logic is typically triggered off of the response to one question and designed to ensure that questions that are no longer relevant for the interviewee are not asked. We will use the smoking cigarettes survey SMQ for cycle J (2017–2018) as the basis for our discussion, since it makes rather heavy use of branching, which we will also refer to as skipping.\n\n\n\n\n\n\n\n\nFigure 1: Questions SMQ020 and SMD030\n\n\n\nIn Figure 1 we see the documentation for two questions in the 2017–2018 survey. First, participants were asked the question SMQ020, whether or not they had smoked 100 cigarettes in their life. Those that said Yes were asked the question SMD030, at what age did they being smoking. Anyone who responded No to SMQ020 skipped over SMD030 and a number of other questions about smoking and cigarettes. The goal is to make the survey less onerous for those people, as there were over 20 questions skipped and someone who had never smoked would probably not have answers to those questions.\nWe next consider the table for SMD030. Of the 2359 people who answered Yes to SMQ020, 2285 gave an age (in years), 62 said that they never really smoked regularly, and 12 responded that they did not know. The 3497 people who answered No to SMQ020 were recorded as Missing for question SMD030. An additional 868 people, who were asked question SMD030, also had Missing entered for their response, for a total of 4365 people recorded as having a missing response for SMD030.\nThis is a common practice throughout the NHANES survey. Whenever a question is skipped for a participant, the response is recorded as Missing. However, Missing is also a possible response for participants who were asked a question. The only way to distinguish between these two very different types of missingness is to consider the responses to preceding questions to determine whether or not the question was actually asked to a particular participant.\nNow, when we analyze this data we will need to think carefully about how to deal with the data in SMD030. If we are analyzing smokers only, then the skipping is not an issue. But if we want to study obesity, for example, and we want to include smoking behavior as a predictor, we will want to be careful about using SMD030. If we use it without doing any preprocessing, then most modeling software, such as lm or glm in R, will simply remove any case (person) who has a missing value in any of their covariates. That would be quite devestating to our analysis and would in some sense invalidate it, since in that scenario only smokers would end up in the final model.\nSo, if we want to keep information on smoking in our model and we want to use the age at which someone started smoking in our analysis, then we need to find some way to encode SMD030 that does not use missing values. One choice is to set the age at which they started smoking to be their current age. Using that value one can determine the number of years they smoked by subtracting the age at which they started from their current age. For the nonsmokers this would then be 0 (zero). One could also entertain the use of survival analysis techniques with that definition. For non-smokers, we don’t know if they will start smoking in the future, but we do know that they have not started by their current age.\nOur goal in the remainder of this article is to describe tools that can help analysts easily identify any skipping behavior. The question of how to appropriately remediate skipping is potentially very complicated, and cannot easily be automated."
  },
  {
    "objectID": "variable-skipping.html#why-is-this-important",
    "href": "variable-skipping.html#why-is-this-important",
    "title": "Skipping of Questions in NHANES",
    "section": "Why is this important?",
    "text": "Why is this important?\nEnsuring that you appropriately address skipping is going to be important for any analysis. Failing to address this issue can lead to decreased power, since you may drop out of your analysis observations that you did not need to. Fewer individuals generally leads to less power.\nIt can also lead to bias. Returning to the example above, if we do not address the missing values that were inserted into SMD030 then any analysis that includes that variable could result in all non-smokers being removed, as most modeling functions require complete cases. Consequently, our estimates would be applicable only to smokers, and not, as we were hoping, to the whole population."
  },
  {
    "objectID": "variable-skipping.html#identifying-skipped-questions",
    "href": "variable-skipping.html#identifying-skipped-questions",
    "title": "Skipping of Questions in NHANES",
    "section": "Identifying skipped questions",
    "text": "Identifying skipped questions\nThe get_skip_info() function in the phonto package can be used to identify questions that were potentially skipped based on answers to previous questions in the same table. Here we use it to get the skipping information for table SMQ_J.\nEach row in the returned data frame corresponds to a question in the survey. By default, get_skip_info() returns a data frame with one row for each question in the survey. It does not include a row for SEQN, so it is not quite the number of columns in the data.\nWe assume that the questions were given in the order that they are presented in the metadata HTML page. This allows us to identify, for each question, whether it might have been skipped, and if it was, which of the previous questions in the survey might have caused the skipping (the SkippedDueTo column). As you will note on examining that ouput, there are some questions that might be skipped due to a fairly large number of previous questions, others that are never skipped, and some that are skipped just due to one question.\nThis complexity is challenging to interpret and it is likely that analysts will need to be quite careful in determining what, if anything, needs to be done in order to obtain an appropriate analysis of the data.\n\ngg = get_skip_info(\"SMQ_J\")\ndatatable(gg, options = list(pageLength = \"50\"))"
  },
  {
    "objectID": "variable-skipping.html#another-example-blood-pressure-by-age",
    "href": "variable-skipping.html#another-example-blood-pressure-by-age",
    "title": "Skipping of Questions in NHANES",
    "section": "Another example: Blood Pressure by Age",
    "text": "Another example: Blood Pressure by Age\nWe illustrate the importance of taking skipping information into account using another example involving blood pressure. In this case, once the skipping issue is identified, resolving it is fairly straightforward. However, a failure to identify the issue in the first place would result in informative observations being dropped from the analysis, leading to loss of power and very likely biased estimates.\nHypertension is an important metric of overall health that generally worsens with age. One may be interested in knowing how the distribution of blood pressure changes with age, so that guidelines regarding it may be tuned accordingly.\nThe BPX data and its analogues in other cycles measure blood pressure related variables. In the analysis below, we combine the BPXSY1 variable (the first reading of systolic blood pressure) with age and gender to estimate how average systolic blood pressure changes with age. We restrict our analysis to the Non-Hispanic White subpopulation.\nFirst we combine the relevant data from the two tables from the first ten cycles, using the jointQuery() function in the phonto package to efficiently extract and combine the data using database operations.\n\ndemo_vars &lt;- c(\"RIDAGEYR\", \"RIAGENDR\", \"RIDRETH1\")\ndemo_tables &lt;- c(\"DEMO\", \"DEMO_B\", \"DEMO_C\", \"DEMO_D\", \"DEMO_E\",\n                 \"DEMO_F\", \"DEMO_G\", \"DEMO_H\", \"DEMO_I\", \"DEMO_J\")\ndemo_list &lt;- rep(list(demo_vars), length(demo_tables))\nnames(demo_list) &lt;- demo_tables\nbpx_vars &lt;- c(\"BPXSY1\")\nbpx_tables &lt;- c(\"BPX\", \"BPX_B\", \"BPX_C\", \"BPX_D\", \"BPX_E\",\n                \"BPX_F\", \"BPX_G\", \"BPX_H\", \"BPX_I\", \"BPX_J\")\nbpx_list &lt;- rep(list(bpx_vars), length(bpx_tables))\nnames(bpx_list) &lt;- bpx_tables\nsystem.time(df1 &lt;- jointQuery(c(demo_list, bpx_list)))\n\n   user  system elapsed \n  2.231   0.147   6.225 \n\ndf1 &lt;- dplyr::filter(df1, RIDAGEYR &gt; 20 & RIDRETH1 == \"Non-Hispanic White\")\n\nTo see how the distribution of systolic blood pressure changes with age, we plot the data in Figure 2 along with a nonparametric LOESS smooth.\n\nxyplot(BPXSY1 ~ RIDAGEYR | RIAGENDR, df1, grid = TRUE,\n       alpha = 0.4) + layer(panel.loess(x, y, lwd = 2, col = \"grey20\"))\n\n\n\n\n\n\n\nFigure 2: Plot of systolic blood pressure by age and gender along with LOESS smooth\n\n\n\n\n\nAs we are interested primarily in the estimated regression smooth, we can remove the distraction of the actual data points. Figure 3 shows only the LOESS smooth, making it easier to see the changes in average systolic blood pressure, and compare white males and white females.\n\nxyplot(BPXSY1 ~ RIDAGEYR | RIAGENDR, df1, grid = TRUE,\n       ylim = extendrange(c(100, 160)), type = \"smooth\")\n\n\n\n\n\n\n\nFigure 3: LOESS smooth of systolic blood pressure by age and gender\n\n\n\n\n\nThese plots suggest that on average, systolic blood pressure increases with age, but the rate of increase is significantly higher for females, who start with lower values than males but end up with higher values. Also, interestingly, the growth is more or less linear for both genders, with a change in the rate of change (slope) around age 40.\nOf course, any interpretation of these blood pressure measurements must take into account other covariates that may affect blood pressure. The most obvious one we may want to consider is whether the person being studied is taking any blood pressure lowering medication. This information is recorded in another set of tables starting with BPQ, which records responses to interview questions related to blood pressure. The question that is most directly relevant is\n\nnhanesCodebook(\"BPQ_C\")$BPQ050A\n\n$`Variable Name:`\n[1] \"BPQ050A\"\n\n$`SAS Label:`\n[1] \"Now taking prescribed medicine\"\n\n$`English Text:`\n[1] \"HELP AVAILABLE (Are you/Is SP) now taking prescribed medicine\"\n\n$`Target:`\n[1] \"Both males and females 16 YEARS - 150 YEARS\"\n\n$BPQ050A\n# A tibble: 5 × 5\n  Code.or.Value Value.Description Count Cumulative Skip.to.Item\n  &lt;chr&gt;         &lt;chr&gt;             &lt;int&gt;      &lt;int&gt; &lt;chr&gt;       \n1 1             Yes                1291       1291 &lt;NA&gt;        \n2 2             No                  160       1451 &lt;NA&gt;        \n3 7             Refused               0       1451 &lt;NA&gt;        \n4 9             Don't know            1       1452 &lt;NA&gt;        \n5 .             Missing            4761       6213 &lt;NA&gt;        \n\n\nHowever, a response of Mising for this question does not necessarily mean that information is unavailable. The following code tells us that this question may have been skipped depending on the response to two previous questions.\n\nget_skip_info(\"BPQ_C\") |&gt; subset(Variable == \"BPQ050A\")\n\n   Table Variable MaybeSkipped   SkippedDueTo\n17 BPQ_C  BPQ050A         TRUE BPQ010, BPQ020\n\n\nThese questions are\n\nnhanesCodebook(\"BPQ_C\")$BPQ010$`SAS Label:`\n\n[1] \"Last blood pressure reading by doctor\"\n\nnhanesCodebook(\"BPQ_C\")$BPQ020$`SAS Label:`\n\n[1] \"Ever told you had high blood pressure\"\n\n\nMore details regarding the number of participants for whom BPQ050A was skipped in a particular cycle is available in the corresponding codebooks.\n\nnhanesCodebook(\"BPQ_C\")$BPQ010$BPQ010\n\n# A tibble: 8 × 5\n  Code.or.Value Value.Description                Count Cumulative Skip.to.Item\n  &lt;chr&gt;         &lt;chr&gt;                            &lt;int&gt;      &lt;int&gt; &lt;chr&gt;       \n1 1             Less than 6 months ago,           4412       4412 \"\"          \n2 2             6 months to 1 year ago,            868       5280 \"\"          \n3 3             More than 1 year to 2 years ago,   434       5714 \"\"          \n4 4             More than 2 years ago, or          411       6125 \"\"          \n5 5             Never?                              75       6200 \"BPQ055\"    \n6 7             Refused                              0       6200 \"BPQ055\"    \n7 9             Don't know                          13       6213 \"\"          \n8 .             Missing                              0       6213 \"\"          \n\nnhanesCodebook(\"BPQ_C\")$BPQ020$BPQ020\n\n# A tibble: 5 × 5\n  Code.or.Value Value.Description Count Cumulative Skip.to.Item\n  &lt;chr&gt;         &lt;chr&gt;             &lt;int&gt;      &lt;int&gt; &lt;chr&gt;       \n1 1             Yes                1801       1801 \"\"          \n2 2             No                 4319       6120 \"BPQ055\"    \n3 7             Refused               0       6120 \"BPQ055\"    \n4 9             Don't know           18       6138 \"BPQ055\"    \n5 .             Missing              75       6213 \"\"          \n\n\nIt is clear, once we compare the numbers in the three tables, that most of the the Missing values in BPQ050A (4319 out of 4761) are because this question was skipped for individuals who have never been diagnosed with high blood pressure. The other variable BPQ010 has a relatively minor impact. Assuming that these trends are representative of all cycles, and in the interest of keeping our example simple, we will proceed with our analysis by incorporating the additional information contained in BPQ020 (while ignoring BPQ010).\n\nbpq_vars &lt;- c(\"BPQ020\", \"BPQ050A\")\nbpq_tables &lt;- c(\"BPQ\", \"BPQ_B\", \"BPQ_C\", \"BPQ_D\", \"BPQ_E\",\n                \"BPQ_F\", \"BPQ_G\", \"BPQ_H\", \"BPQ_I\", \"BPQ_J\")\nbpq_list &lt;- rep(list(bpq_vars), length(bpq_tables))\nnames(bpq_list) &lt;- bpq_tables\nsystem.time(df2 &lt;- jointQuery(c(demo_list, bpx_list, bpq_list)))\n\n   user  system elapsed \n  3.121   0.221   8.995 \n\ndf2 &lt;- dplyr::filter(df2, RIDAGEYR &gt; 20 & RIDRETH1 == \"Non-Hispanic White\")\n\nAfter regenerating our dataset to include the additional variables, we create a new derived variable that records our best guess regarding whether a participant is currently taking blood pressure lowering medication, interpreting any ambiguous information as missing data, which will be excluded from the analysis.\n\ndf2 &lt;- dplyr::mutate(df2,\n                     NoBPMed = BPQ020 == \"No\" | BPQ050A == \"No\",\n                     BPMed = ifelse(NoBPMed, \"No\",\n                                    ifelse(BPQ050A == \"Yes\", \"Yes\", NA_character_)))\n\nFinally, Figure 4 compares the LOESS smooths of systolic blood pressure by age and gender separately for those who are taking blood pressure lowering medication and those who are not.\n\nxyplot(BPXSY1 ~ RIDAGEYR | RIAGENDR, df2, grid = TRUE, groups = BPMed,\n       auto.key = list(title = \"Taking BP Medicine\", columns = 2,\n                       lines = TRUE, points = FALSE),\n       xlab = \"Age in years\", ylab = \"Systolic blood pressure\",\n       ylim = extendrange(c(100, 160)), type = \"smooth\")\n\n\n\n\n\n\n\nFigure 4: LOESS smooth of systolic blood pressure by age and gender, separately for those who take blood pressure lowering medication and those who do not.\n\n\n\n\n\nSomewhat counterintutively, those who are taking medication still have significantly higher blood pressure than those who are not. We can interpret this as meaning that hypertension is generally diagnosed and treated in a timely manner, but that treatment does not appear to be enough to bring back the blood pressure levels at par with those not treated.\nThere are other interesting features of the plot that we will not delve into further. Of course, a more nuanced analysis will need to look at confidence bands for these smooths, possibly incorporate other covariates, and also take into account that these data from a complex survey cannot be treated as a simple random sample as we have done."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "These tutorials are part of the Epiconnector project, which aims to develop and share open source software that enables analysis of complex epidemiological data, with an emphasis on ease of analysis and reproducible research.\nSee here for more details.\n\nPeople\n\nRobert Gentleman\nLaha Ale\nDeepayan Sarkar"
  },
  {
    "objectID": "nhanes-introduction.html",
    "href": "nhanes-introduction.html",
    "title": "Introduction to NHANES",
    "section": "",
    "text": "The National Health and Nutrition Examination Survey (NHANES) is a program of the National Center for Health Statistics (NCHS), which is part of the US Centers for Disease Control and Prevention (CDC). It measures the health and nutritional status of adults and children in the United States in a series of surveys that combine interviews and physical examinations.\nAlthough the program began in the early 1960s, its structure was changed in the 1990s. Since 1999, the program has been conducted on an ongoing basis, where a nationally representative sample of about 5,000 persons (across 15 counties) is examined each year, with public-use data released in two-year cycles. This phase of the program is referred to as continuous NHANES.\nThe NHANES interview includes demographic, socioeconomic, dietary, and health-related questions. The examination component consists of medical, dental, and physiological measurements, as well as laboratory tests administered by highly trained medical personnel. Although the details of the responses recorded vary from cycle to cycle, there is a substantial amount of consistency, making it possible to compare data across cycles. Sampling weights are provided along with demographic details for each participant; see the NHANES analytic guidelines for details. NHANES is a rich resource that has been used extensively in epidemiological research."
  },
  {
    "objectID": "nhanes-introduction.html#the-nhanesa-package",
    "href": "nhanes-introduction.html#the-nhanesa-package",
    "title": "Introduction to NHANES",
    "section": "The nhanesA package",
    "text": "The nhanesA package\nThe nhanesA package provides a user-friendly interface to download and process data and documentation files from the NHANES website. To use the utilities in this package, we first need to know a few more details about how NHANES data and documentation are structured.\nEach available data file, which we henceforth call an NHANES table, can be identified uniquely by a name. Generally speaking, each public-use table has a corresponding data file (a SAS transport file, with extension xpt) and a corresponding documentation file (a webpage, with extension htm). The URLs from which these files can be downloaded can usually be predicted from the table name, and the cycle it belongs to. Cycles are typically of 2-year duration, starting from 1999-2000.\nAlthough there are exceptions, a table that is available for one cycle will typically be available for other cycles as well, with a suffix appended to the name of the table indicating the cycle. To make these details concrete, let us use the nhanesManifest() function in the nhanesA package to download the list of available tables and look at the names and URLs for the DEMO data files, which contain demographic information and sampling weights for each study participant.\n\nlibrary(nhanesA)\nmanifest &lt;- nhanesManifest(\"public\") |&gt; sort_by(~ Table)\nsubset(manifest, startsWith(Table, \"DEMO\"))\n\n     Table                                             DocURL\n370   DEMO   /Nchs/Data/Nhanes/Public/1999/DataFiles/DEMO.htm\n369 DEMO_B /Nchs/Data/Nhanes/Public/2001/DataFiles/DEMO_B.htm\n368 DEMO_C /Nchs/Data/Nhanes/Public/2003/DataFiles/DEMO_C.htm\n366 DEMO_D /Nchs/Data/Nhanes/Public/2005/DataFiles/DEMO_D.htm\n367 DEMO_E /Nchs/Data/Nhanes/Public/2007/DataFiles/DEMO_E.htm\n371 DEMO_F /Nchs/Data/Nhanes/Public/2009/DataFiles/DEMO_F.htm\n372 DEMO_G /Nchs/Data/Nhanes/Public/2011/DataFiles/DEMO_G.htm\n373 DEMO_H /Nchs/Data/Nhanes/Public/2013/DataFiles/DEMO_H.htm\n374 DEMO_I /Nchs/Data/Nhanes/Public/2015/DataFiles/DEMO_I.htm\n375 DEMO_J /Nchs/Data/Nhanes/Public/2017/DataFiles/DEMO_J.htm\n377 DEMO_L /Nchs/Data/Nhanes/Public/2021/DataFiles/DEMO_L.htm\n                                               DataURL     Years\n370   /Nchs/Data/Nhanes/Public/1999/DataFiles/DEMO.xpt 1999-2000\n369 /Nchs/Data/Nhanes/Public/2001/DataFiles/DEMO_B.xpt 2001-2002\n368 /Nchs/Data/Nhanes/Public/2003/DataFiles/DEMO_C.xpt 2003-2004\n366 /Nchs/Data/Nhanes/Public/2005/DataFiles/DEMO_D.xpt 2005-2006\n367 /Nchs/Data/Nhanes/Public/2007/DataFiles/DEMO_E.xpt 2007-2008\n371 /Nchs/Data/Nhanes/Public/2009/DataFiles/DEMO_F.xpt 2009-2010\n372 /Nchs/Data/Nhanes/Public/2011/DataFiles/DEMO_G.xpt 2011-2012\n373 /Nchs/Data/Nhanes/Public/2013/DataFiles/DEMO_H.xpt 2013-2014\n374 /Nchs/Data/Nhanes/Public/2015/DataFiles/DEMO_I.xpt 2015-2016\n375 /Nchs/Data/Nhanes/Public/2017/DataFiles/DEMO_J.xpt 2017-2018\n377 /Nchs/Data/Nhanes/Public/2021/DataFiles/DEMO_L.xpt 2021-2023\n            Date.Published\n370 Updated September 2009\n369 Updated September 2009\n368 Updated September 2009\n366 Updated September 2009\n367         September 2009\n371         September 2011\n372   Updated January 2015\n373           October 2015\n374         September 2017\n375          February 2020\n377         September 2024\n\n\nThe nhanesA package allows both data and documentation files to be accessed, either by specifying their URL explicitly, or simply using the table name, in which case the relevant URL is constructed from it. For example,\n\ndemo_b &lt;- nhanesFromURL(\"/Nchs/Data/Nhanes/Public/2001/DataFiles/DEMO_B.xpt\",\n                        translated = FALSE)\ndemo_c &lt;- nhanes(\"DEMO_C\", translated = FALSE)\n\n\nstr(demo_b[1:10])\n\n'data.frame':   11039 obs. of  10 variables:\n $ SEQN    : num  9966 9967 9968 9969 9970 ...\n $ SDDSRVYR: num  2 2 2 2 2 2 2 2 2 2 ...\n $ RIDSTATR: num  2 2 2 2 2 2 2 2 2 1 ...\n $ RIDEXMON: num  2 1 1 2 2 2 1 2 1 NA ...\n $ RIAGENDR: num  1 1 2 2 1 2 1 2 1 1 ...\n $ RIDAGEYR: num  39 23 84 51 16 14 44 63 13 80 ...\n $ RIDAGEMN: num  472 283 1011 612 200 ...\n $ RIDAGEEX: num  473 284 1012 612 200 ...\n $ RIDRETH1: num  3 4 3 3 2 2 3 1 4 3 ...\n $ RIDRETH2: num  1 2 1 1 5 5 1 3 2 1 ...\n\nstr(demo_c[1:10])\n\ntibble [10,122 × 10] (S3: tbl_df/tbl/data.frame)\n $ SEQN    : int [1:10122] 21005 21006 21007 21008 21009 21010 21011 21012 21013 21014 ...\n $ SDDSRVYR: int [1:10122] 3 3 3 3 3 3 3 3 3 3 ...\n $ RIDSTATR: int [1:10122] 2 2 2 2 2 2 2 2 2 2 ...\n $ RIDEXMON: int [1:10122] 1 2 1 2 2 2 1 2 1 2 ...\n $ RIAGENDR: int [1:10122] 1 2 2 1 1 2 1 1 2 1 ...\n $ RIDAGEYR: int [1:10122] 19 16 14 17 55 52 0 63 13 3 ...\n $ RIDAGEMN: int [1:10122] 232 203 172 208 671 633 3 765 163 42 ...\n $ RIDAGEEX: int [1:10122] 233 205 172 209 672 634 4 766 164 42 ...\n $ RIDRETH1: int [1:10122] 4 4 3 4 3 3 1 4 4 4 ...\n $ RIDRETH2: int [1:10122] 2 2 1 2 1 1 3 2 2 2 ...\n\n\nThe data in these files appear as numeric codes, and must be interpreted using codebooks available in the documentation files, which can be parsed as follows.\n\ndemo_b_codebook &lt;-\n    nhanesCodebookFromURL(\"/Nchs/Data/Nhanes/Public/2001/DataFiles/DEMO_B.htm\")\ndemo_b_codebook$RIDSTATR \n\n$`Variable Name:`\n[1] \"RIDSTATR\"\n\n$`SAS Label:`\n[1] \"Interview/Examination Status\"\n\n$`English Text:`\n[1] \"Interview and Examination Status of the Sample Person.\"\n\n$`Target:`\n[1] \"Both males and females 0 YEARS -\\r 150 YEARS\"\n\n$RIDSTATR\n# A tibble: 3 × 5\n  `Code or Value` `Value Description`            Count Cumulative `Skip to Item`\n  &lt;chr&gt;           &lt;chr&gt;                          &lt;int&gt;      &lt;int&gt; &lt;lgl&gt;         \n1 1               Interviewed Only                 562        562 NA            \n2 2               Both Interviewed and MEC exam… 10477      11039 NA            \n3 .               Missing                            0      11039 NA            \n\ndemo_b_codebook$RIAGENDR\n\n$`Variable Name:`\n[1] \"RIAGENDR\"\n\n$`SAS Label:`\n[1] \"Gender\"\n\n$`English Text:`\n[1] \"Gender of the sample person\"\n\n$`Target:`\n[1] \"Both males and females 0 YEARS -\\r 150 YEARS\"\n\n$RIAGENDR\n# A tibble: 3 × 5\n  `Code or Value` `Value Description` Count Cumulative `Skip to Item`\n  &lt;chr&gt;           &lt;chr&gt;               &lt;int&gt;      &lt;int&gt; &lt;lgl&gt;         \n1 1               Male                 5331       5331 NA            \n2 2               Female               5708      11039 NA            \n3 .               Missing                 0      11039 NA            \n\n\nBy default, the data access step converts the raw data into more meaningful values using the corresponding codebook.\n\ndemo_c &lt;- nhanes(\"DEMO_C\", translated = TRUE)\nDT::datatable(demo_c)\n\nWarning in instance$preRenderHook(instance): It seems your data is too big for\nclient-side DataTables. You may consider server-side processing:\nhttps://rstudio.github.io/DT/server.html\n\n\n\n\n\n\nFurther analysis can be performed on these resulting datasets which are regular R data frames. Simple examples of such analyses, and other functionality in the nhanesA package such as search utilities, are described in Ale et al, 2024."
  },
  {
    "objectID": "nhanes-introduction.html#limitations-of-this-approach",
    "href": "nhanes-introduction.html#limitations-of-this-approach",
    "title": "Introduction to NHANES",
    "section": "Limitations of this approach",
    "text": "Limitations of this approach\nThe nhanesA package is designed to access NHANES data on demand from the CDC website. The efficiency of such an approach is naturally limited by available bandwidth. Another limitation that is not obvious at first glance is apparent when we try to combine data across multiple cycles. Not all variables are measured in all cycles, and even when they are, they may not be included in the same tables (and sometimes they are included in multiple tables). Analyzing the availability of variables of interest is difficult with the rudimentary search facilities available on the NHANES website.\nAnother subtle issue that is important from the perspective of reproducible research is the possibility of data updates (see below). NHANES is an ongoing program, so new datasets are released on a regular basis. More importantly from a reproducibility angle, previously released datasets are sometimes updated. Older versions are not retained on the NHANES website. This means that an analysis performed on a given date may be impossible to recreate on a later date, unless the relevant data sets have been retained."
  },
  {
    "objectID": "bmi-over-cycles.html",
    "href": "bmi-over-cycles.html",
    "title": "Distribution of BMI over time",
    "section": "",
    "text": "NHANES is not a longitudinal study; that is, it does not follow participants over time. Rather, the data collected in any NHANES cycle can be viewed as a snapshot of the US population from the period corresponding to that cycle. Analyses that combine data across cycles typically assume that the underlying population characteristics have not changed across the cycles being combined.\nHowever, as NHANES has now collected data over more than two decades, it may also contain evidence of characteristics that have changed over time. In this analysis, we consider a specific question: whether the distribution of BMI, a standard indicator of obesity, has changed across cycles. We ask this question separately for various ethnicities and genders, as BMI is known to vary substantially across population subgroups. As an illustration of best practices, we use methods from the survey package which take into account the complex sample selection design of NHANES."
  },
  {
    "objectID": "bmi-over-cycles.html#relevant-variables",
    "href": "bmi-over-cycles.html#relevant-variables",
    "title": "Distribution of BMI over time",
    "section": "Relevant variables",
    "text": "Relevant variables\nTo identify variables that contain information about BMI and the NHANES tables they are available in, we can use the nhanesSearch() function in the nhanesA package.\n\nlibrary(nhanesA)\nnhanesOptions(log.access = TRUE)\nnhanesSearch(\"body mass index\")\n\n# A tibble: 12 × 7\n   Variable.Name Variable.Description      Data.File.Name Data.File.Description\n   &lt;chr&gt;         &lt;chr&gt;                     &lt;chr&gt;          &lt;chr&gt;                \n 1 BMXBMI        Body Mass Index (kg/m**2) BMX            Body Measures        \n 2 BMXBMI        Body Mass Index (kg/m**2) BMX_B          Body Measures        \n 3 BMXBMI        Body Mass Index (kg/m**2) BMX_C          Body Measures        \n 4 BMXBMI        Body Mass Index (kg/m**2) BMX_D          Body Measures        \n 5 BMXBMI        Body Mass Index (kg/m**2) BMX_E          Body Measures        \n 6 BMXBMI        Body Mass Index (kg/m**2) BMX_F          Body Measures        \n 7 BMXBMI        Body Mass Index (kg/m**2) BMX_G          Body Measures        \n 8 BMXBMI        Body Mass Index (kg/m**2) BMX_H          Body Measures        \n 9 BMXBMI        Body Mass Index (kg/m**2) BMX_I          Body Measures        \n10 BMXBMI        Body Mass Index (kg/m**2) BMX_J          Body Measures        \n11 BMXBMI        Body Mass Index (kg/m**2) P_BMX          Body Measures        \n12 BMXBMI        Body Mass Index (kg/m**2) BMX_L          Body Measures        \n# ℹ 3 more variables: Begin.Year &lt;int&gt;, EndYear &lt;int&gt;, Component &lt;chr&gt;\n\n\nThese results tell us that BMI measurements are available as the BMXBMI variable in the BMX tables. For any reasonable analysis, we will need to combine these at least with demographic information available in the DEMO tables."
  },
  {
    "objectID": "bmi-over-cycles.html#bmi-by-age",
    "href": "bmi-over-cycles.html#bmi-by-age",
    "title": "Distribution of BMI over time",
    "section": "BMI by age",
    "text": "BMI by age\nTo compare the distribution of BMI across cycles, we need to first understand the factors that affect its distribution within a cycle. Natural covariates are gender and ethnicity, and possibly age. To understand the dependence on age, we choose a particular demographic subgroup (white females) from a particular cycle, and plot BMI vs age.\n\nlibrary(dplyr)\nlibrary(lattice)\nlibrary(latticeExtra)\nbmdata &lt;-\n    left_join(nhanes(\"DEMO_C\", translated = TRUE),\n              nhanes(\"BMX_C\", translated = TRUE),\n              by = \"SEQN\") |&gt;\n    subset(RIDAGEYR &gt; 20 & RIDAGEYR &lt; 75)\nbmi_white_female &lt;-\n    subset(bmdata, RIDRETH1 == \"Non-Hispanic White\" & RIAGENDR == \"Female\")\n\n\nxyplot(bmi_white_female, BMXBMI ~ RIDAGEYR, grid = TRUE, smooth = \"loess\")\n\n\n\n\n\n\n\nFigure 1\n\n\n\n\n\nThe smooth line is a LOESS line giving a nonparametric estimator of the average BMI as a function of age for this population subgroup. Unfortunately, the data shown in this figure are not an i.i.d. sample from the population, and so the estimated smooth may be biased and misleading. To take the complex survey design on NHANES into account, we can use tools in the survey package, which implements variants of many standard statistical analysis tools appropriate for survey data.\nThe survey package does not implement a survey variant of LOESS, although it does implement local polynomial smoothing (see `?svysmooth). We will instead use a parametric variant that supports “non-linear” mean functions via basis splines. Before doing this, we first need to set up a survey design object with suitable weights, id, and strata information.\n\nlibrary(survey)\nlibrary(splines)\ndesign &lt;- svydesign(id = ~ SDMVPSU, strata = ~ SDMVSTRA, weights = ~ WTMEC2YR,\n                    data = bmdata,\n                    nest = TRUE)\nns_age &lt;- function(x) splines::ns(x, knots = seq(30, 65, length = 2),\n                                 Boundary.knots = c(21, 74))\nfm &lt;- svyglm(BMXBMI ~ ns_age(RIDAGEYR), design = design,\n             subset = RIDRETH1 == \"Non-Hispanic White\" & RIAGENDR == \"Female\")\nfm\n\nStratified 1 - level Cluster Sampling design (with replacement)\nWith (29) clusters.\nsvydesign(id = ~SDMVPSU, strata = ~SDMVSTRA, weights = ~WTMEC2YR, \n    data = bmdata, nest = TRUE)\n\nCall:  svyglm(formula = BMXBMI ~ ns_age(RIDAGEYR), design = design, \n    subset = RIDRETH1 == \"Non-Hispanic White\" & RIAGENDR == \"Female\")\n\nCoefficients:\n      (Intercept)  ns_age(RIDAGEYR)1  ns_age(RIDAGEYR)2  ns_age(RIDAGEYR)3  \n          24.4626             4.9647             6.9068             0.7908  \n\nDegrees of Freedom: 1003 Total (i.e. Null);  11 Residual\n  (74 observations deleted due to missingness)\nNull Deviance:      52850 \nResidual Deviance: 50990    AIC: 6932\n\n\nThis gives a different smooth that is appropriately adjusted for unequal survey weights.\n\nxyplot(bmdata, BMXBMI ~ RIDAGEYR, grid = TRUE,\n       subset = RIDRETH1 == \"Non-Hispanic White\" & RIAGENDR == \"Female\") + \n    xyplot(predict(fm, newdata = list(RIDAGEYR = x)) ~ x,\n           data = data.frame(x = 20:75), type = \"l\")\n\n\n\n\n\n\n\nFigure 2\n\n\n\n\n\nThis smooth represents an estimate of the expected BMI as a function of age for white females. What we are really interested in is how this function changes over time, that is across cycles, for this and other population subgroups.\nTo do this, we first obtain the survey design objects for each cycle, restricting our attention to (non-Hispanic) white and black adults.\n\nshortCycle &lt;- function(SDDSRVYR)\n{\n    cycle &lt;- substring(SDDSRVYR, 8, 16)\n    cycle[grepl(\"August\", cycle)] &lt;- \"2021-2023\"\n    cycle\n}\nmakeDesign &lt;- function(demo_table, bmx_table)\n{\n    data &lt;-\n        left_join(nhanes(demo_table, translated = TRUE),\n                  nhanes(bmx_table, translated = TRUE),\n                  by = \"SEQN\")\n    data &lt;- within(data, cycle &lt;- shortCycle(SDDSRVYR))\n    if (anyNA(data$WTMEC2YR)) warning(\"dropping rows with missing exam weights (WTMEC2YR) in \", demo_table)\n    data &lt;- subset(data, is.finite(WTMEC2YR))\n    design &lt;- svydesign(id = ~ SDMVPSU, strata = ~ SDMVSTRA, weights = ~ WTMEC2YR,\n                        data = data,\n                        nest = TRUE)\n    subset(design, is.finite(BMXBMI) &\n                   RIDAGEYR &gt; 20 & RIDAGEYR &lt; 75 &\n                   RIDRETH1 %in% c(\"Non-Hispanic Black\", \"Non-Hispanic White\"))\n}\nbmx_tables &lt;- c(\"BMX\", \"BMX_B\", \"BMX_C\", \"BMX_D\", \"BMX_E\", \"BMX_F\", \"BMX_G\", \"BMX_H\", \"BMX_I\", \"BMX_J\", \"BMX_L\")\ndemo_tables &lt;- c(\"DEMO\", \"DEMO_B\", \"DEMO_C\", \"DEMO_D\", \"DEMO_E\", \"DEMO_F\", \"DEMO_G\", \"DEMO_H\", \"DEMO_I\", \"DEMO_J\", \"DEMO_L\")\nall_designs &lt;- mapply(makeDesign, demo_tables, bmx_tables, SIMPLIFY = FALSE)\n\nWarning in (function (demo_table, bmx_table) : dropping rows with missing exam\nweights (WTMEC2YR) in DEMO_H\n\n\nWarning in (function (demo_table, bmx_table) : dropping rows with missing exam\nweights (WTMEC2YR) in DEMO_I\n\n\nWarning in (function (demo_table, bmx_table) : dropping rows with missing exam\nweights (WTMEC2YR) in DEMO_J\n\n\nWarning in (function (demo_table, bmx_table) : dropping rows with missing exam\nweights (WTMEC2YR) in DEMO_L\n\n\nNext, we repeat the smoothing computation for each cycle, for four population subgroups.\n\ng &lt;- expand.grid(cycle = names(all_designs),\n                 gender = c(\"Female\", \"Male\"),\n                 ethnicity = c(\"Non-Hispanic Black\", \"Non-Hispanic White\"),\n                 KEEP.OUT.ATTRS = FALSE)\nsmooth  &lt;- vector(mode = \"list\", length = nrow(g))\nfor (i in seq_len(nrow(g))) {\n    fm &lt;- svyglm(BMXBMI ~ ns_age(RIDAGEYR),\n                 design = all_designs[[ g$cycle[i] ]],\n                 subset = RIDRETH1 == g$ethnicity[i] & RIAGENDR == g$gender[i])\n    smooth[[i]] &lt;-\n        data.frame(cycle = g$cycle[i],\n                   ethnicity = g$ethnicity[i],\n                   gender = g$gender[i],\n                   Age = 20:75,\n                   AvgBMI = predict(fm, newdata = list(RIDAGEYR = 20:75),\n                                    type = \"response\") |&gt; as.numeric())\n}\nsmoothDF &lt;- do.call(rbind, smooth)\n\nThe resulting smooths can be compared using the following plot.\n\nxyplot(smoothDF, AvgBMI ~ Age | gender + ethnicity, type = \"l\", groups = cycle,\n       grid = TRUE, auto.key = TRUE)\n\n\n\n\n\n\n\nFigure 3\n\n\n\n\n\nAlthough it is not straightforward to interpret this plot, it is clear that average BMI tends to initially increase with age, after which it tends to stabilize. For this reason, we choose to consider only a middle age group, namely, adults between ages 40–59."
  },
  {
    "objectID": "bmi-over-cycles.html#average-bmi-in-4059-year-olds",
    "href": "bmi-over-cycles.html#average-bmi-in-4059-year-olds",
    "title": "Distribution of BMI over time",
    "section": "Average BMI in 40–59 year olds",
    "text": "Average BMI in 40–59 year olds\nOnce we decide on a specific age group to consider, we can ignore the dependence on age and simply compare the average BMI across cycles for various population subgroups. Of course, the estimated average BMI values are not of much use unless we also calculate standard errors or confidence intervals, which are nontrivial to compute. For this, we again use the survey package, and specifically its svymean() function, for which the associated confidence intervals can be easily obtained.\nAs the BMI values are somewhat right-skewed, we calculate the average and confidence interval for log-BMI, and transform it back to the BMI scale before plotting.\n\nunrowname &lt;- function(d) { rownames(d) &lt;- NULL; d }\nestMean &lt;- function(design, what, groups, ...)\n{\n    svyby(what, groups,\n          design = subset(design, RIDAGEYR &gt;= 40 & RIDAGEYR &lt;= 59),\n          svymean, ...) |&gt; unrowname()\n}\nCI &lt;- \n    lapply(all_designs, \n           estMean,\n           ~ log(BMXBMI),\n           ~ cycle + RIDRETH1 + RIAGENDR,\n           vartype = \"ci\") |&gt; do.call(what = rbind) |&gt; unrowname()\n## transform back to BMI scale\nCI &lt;- within(CI,\n{\n    estBMI &lt;- exp(`log(BMXBMI)`)\n    LCL &lt;- exp(ci_l)\n    UCL &lt;- exp(ci_u)\n})\n\nIf we now plot the confidence intervals across cycles, we see that although successive confidence intervals are mostly overlapping, there is a distinct general trend of increasing average BMI values over time.\n\nsegplot(factor(cycle) ~ LCL + UCL | interaction(RIAGENDR, RIDRETH1),\n        data = CI, # level = estimate,\n        draw.bands = FALSE, lwd = 2, horizontal = FALSE,\n        ylab = \"95% Confidence Intervals for Average (log) BMI \\n (for Age Group 40-59 years)\",\n        scales = list(x = list(rot = 90)),\n        centers = estBMI) + layer_(panel.grid(v = -1, h = 0))\n\n\n\n\n\n\n\nFigure 4"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "NHANES Tutorials",
    "section": "",
    "text": "This series of tutorials are intended to introduce the NHANES Epiconnector project to data analysts and students working with NHANES data.\nNHANES is an ongoing Health and Nutrition survey conducted by the United States CDC. Most individual-level data from the survey are publicly available, making it a rich resource both for epidemiology research and education.\nNHANES is a complex survey that uses multi-stage sampling and intentionally oversamples certain population subgroups. This makes analysis of NHANES data somewhat nontrivial: Naive statistical estimates such as the sample mean and regression coefficients will be biased for their population counterparts. Even though this can be resolved by using the selection weights provided by CDC, naive estimators of the standard error will still be biased unless one takes into account clusters and PSUs used in the sampling design.\nAnother common issue one needs to account for is related to questionnaire administration and data missingness: Question B may be skipped depending on the answer to question A, but this information is not recorded in the response to question B, except to say that the response is missing. To distinguish such missingness from genuine missingness, one needs to understand the flow of the questionnaire.\nAnother set of challenges arise when we wish to combine data across NHANES cycles. Combining data across cycles gives a larger sample size, which naturally improves inference. However, not all information is collected in all cycles, and sometimes the specific details of what information is collected and where it is available changes.\nThe main challenge for analysts and students new to NHANES data is navigating how the data and documentation can be accessed. The CDC distributes these from their website, using the SAS transport (XPT) format for coded data, and HTML files for documentation. These are both non-standard formats for most modern data analysis tools, and some preliminary work is required to process these inputs and extract usable data.\nThe tutorials below try to address these issues systematically, using an R based workflow. They are meant for users comfortable with R but new to NHANES data analysis, as well as those interested in alternative workflows.\n\nTutorials\n\nIntroduction — A brief introduction to the NHANES project and how it makes data and documentation available to the public.\nAccessing NHANES Data Locally — This article describes R based tools that make it possible to access NHANES data locally, reducing the overhead of downloads.\nDistribution of BMI over time — Although NHANES is not a longitudinal study, it represents data collected over time. This analysis explores whether NHANES data can contain discernible hints about population characteristics that have changed substantially over the study period of continuous NHANES, using BMI as an example. It illustrates the use of appropriate survey tools needed to address the complex design of the NHANES survey, and describes how data from multiple tables can be merged.\nSkipping of Questions in NHANES — This article discusses an important aspect of the NHANES questionnaires: branching or skipping, where a certain response to one question may lead subsequent questions to be skipped. We describe tools to identify such cases, and discuss why it is important to take skipping information into account. The analysis used in the article illustrates how to efficiently combine data from multiple cycles."
  },
  {
    "objectID": "nhanes-local.html",
    "href": "nhanes-local.html",
    "title": "Accessing NHANES data locally",
    "section": "",
    "text": "In its default mode of operation, functions in the nhanesA package scrape data directly from the CDC website each time they are invoked. The advantage is simplicity; users only need to install the nhanesA package without any additional setup. However, the response time is contingent upon internet speed and the size of the requested data.\nAs briefly described in the introduction, nhanesA has two alternative modes of operation where data can be accessed from a local resource: (a) using a prebuilt SQL database, and (b) using a mirror."
  },
  {
    "objectID": "nhanes-local.html#work-in-a-docker-container",
    "href": "nhanes-local.html#work-in-a-docker-container",
    "title": "Accessing NHANES data locally",
    "section": "Work in a Docker container",
    "text": "Work in a Docker container\nFunctions in the nhanesA package can obtain (most) data from a suitably configured SQL database instead of accessing the CDC website directly. The easiest way to obtain such a database is via a Docker image as described here. This docker image includes versions of R and RStudio, and is configured in a way that causes nhanesA to use the database when it is run inside the docker instance. Once the docker container is up and running, one can visit http://localhost:8787/ to get access to an RStudio Server instance.\n\nAfter logging in using the credentials provided when initiating the docker container, the user gets access to an RStudio session where the nhanesA package can be used to access NHANES resources.\n\nFrom the user’s perspective, the experience should be largely identical to the default usage mode of nhanesA, except that the data should become available without any significant delay. The output of running nhanesOptions() indicates that nhanesA was able to detect a database when it was loaded."
  },
  {
    "objectID": "nhanes-local.html#access-the-database-via-port-forwarding",
    "href": "nhanes-local.html#access-the-database-via-port-forwarding",
    "title": "Accessing NHANES data locally",
    "section": "Access the database via port forwarding",
    "text": "Access the database via port forwarding\nIt is also possible to configure nhanesA to use a SQL database when running outside a docker instance, provided the machine has access to the database. Typically, such a database would be made available by running a docker image on the same machine, or on another machine in the local network, and have the host forward the port on which Postgresql should be available (typically 5432) to the running docker instance. This happens automatically if the instructions to start the docker instance are followed. The advantage of doing this is that a single database instance can be used by multiple users in a local network, avoiding making copies of the (large) database.\nUsing nhanesA in this mode requires one additional step. To indicate to the startup code in nhanesA that a database is available, one needs to define certain environment variables that give details of the database that is available. Most of these environment variables are optional, and to use the Postegresl backend, one only needs to mandatorily specify the variable EPICONDUCTOR_CONTAINER_DB=postgres. In case the Postgresql port (5432) has been mapped to a different port on the host machine, this needs to be indicated using EPICONDUCTOR_DB_PORT=&lt;port&gt;. If the database is available on a different host, its address needs to be specified using EPICONDUCTOR_DB_SERVER=&lt;host&gt;.\nFor the default invocation of docker run, and an R session running on the same computer, the following is sufficient to use nhanesA with the database.\n\nSys.setenv(EPICONDUCTOR_CONTAINER_DB = \"postgres\")\nlibrary(nhanesA)"
  },
  {
    "objectID": "nhanes-local.html#usage",
    "href": "nhanes-local.html#usage",
    "title": "Accessing NHANES data locally",
    "section": "Usage",
    "text": "Usage\nOnce a database is successfully configured, the nhanesA package should ideally behave similarly whether or not a database is being used. When a database is successfully found on startup, the package sets a flag called use.db to TRUE.\n\nnhanesOptions()\n\n$use.db\n[1] TRUE\n\n\nWith this setting, we get\n\nnhanesOptions(use.db = TRUE)\nsystem.time(demo_g_db &lt;- nhanes(\"DEMO_G\"))\n\n   user  system elapsed \n  0.491   0.068   1.445 \n\n\nEven when the database is available, it is possible to pause use of the database and revert to downloading from the CDC website by setting\n\nnhanesOptions(use.db = FALSE, log.access = TRUE)\n\nThe log.access option, if set, causes a message to be printed every time a web resource is accessed. With these settings, we get\n\nsystem.time(demo_g_web &lt;- nhanes(\"DEMO_G\"))\n\nDownloading: https://wwwn.cdc.gov/Nchs/Data/Nhanes/Public/2011/DataFiles/DEMO_G.XPT\n\n\n   user  system elapsed \n  0.621   0.087   7.368 \n\n\nThe two versions have minor differences: The order of rows and columns may be different, and categorical variables may be represented either as factors of character strings. However, as long as the data has not been updated on the NHANES website since it was downloaded for inclusion in the database, the contents should be identical.\n\nstr(demo_g_web[1:10])\n\n'data.frame':   9756 obs. of  10 variables:\n $ SEQN    : num  62161 62162 62163 62164 62165 ...\n $ SDDSRVYR: Factor w/ 1 level \"NHANES 2011-2012 public release\": 1 1 1 1 1 1 1 1 1 1 ...\n $ RIDSTATR: Factor w/ 2 levels \"Interviewed only\",..: 2 2 2 2 2 2 2 2 2 2 ...\n $ RIAGENDR: Factor w/ 2 levels \"Male\",\"Female\": 1 2 1 2 2 1 1 1 1 1 ...\n $ RIDAGEYR: num  22 3 14 44 14 9 0 6 21 15 ...\n $ RIDAGEMN: num  NA NA NA NA NA NA 11 NA NA NA ...\n $ RIDRETH1: Factor w/ 5 levels \"Mexican American\",..: 3 1 5 3 4 3 5 5 5 5 ...\n $ RIDRETH3: Factor w/ 6 levels \"Mexican American\",..: 3 1 5 3 4 3 5 6 5 6 ...\n $ RIDEXMON: Factor w/ 2 levels \"November 1 through April 30\",..: 2 1 2 1 2 2 1 1 1 1 ...\n $ RIDEXAGY: num  NA 3 14 NA 14 10 NA 6 NA 15 ...\n\nstr(demo_g_db[1:10])\n\ntibble [9,756 × 10] (S3: tbl_df/tbl/data.frame)\n $ SEQN    : int [1:9756] 62161 62162 62163 62164 62165 62166 62167 62168 62169 62170 ...\n $ SDDSRVYR: chr [1:9756] \"NHANES 2011-2012 public release\" \"NHANES 2011-2012 public release\" \"NHANES 2011-2012 public release\" \"NHANES 2011-2012 public release\" ...\n $ RIDSTATR: chr [1:9756] \"Both interviewed and MEC examined\" \"Both interviewed and MEC examined\" \"Both interviewed and MEC examined\" \"Both interviewed and MEC examined\" ...\n $ RIAGENDR: chr [1:9756] \"Male\" \"Female\" \"Male\" \"Female\" ...\n $ RIDAGEYR: int [1:9756] 22 3 14 44 14 9 0 6 21 15 ...\n $ RIDAGEMN: int [1:9756] NA NA NA NA NA NA 11 NA NA NA ...\n $ RIDRETH1: chr [1:9756] \"Non-Hispanic White\" \"Mexican American\" \"Other Race - Including Multi-Racial\" \"Non-Hispanic White\" ...\n $ RIDRETH3: chr [1:9756] \"Non-Hispanic White\" \"Mexican American\" \"Non-Hispanic Asian\" \"Non-Hispanic White\" ...\n $ RIDEXMON: chr [1:9756] \"May 1 through October 31\" \"November 1 through April 30\" \"May 1 through October 31\" \"November 1 through April 30\" ...\n $ RIDEXAGY: int [1:9756] NA 3 14 NA 14 10 NA 6 NA 15 ..."
  },
  {
    "objectID": "nhanes-local.html#dynamic-caching-using-httpuv-and-biocfilecache",
    "href": "nhanes-local.html#dynamic-caching-using-httpuv-and-biocfilecache",
    "title": "Accessing NHANES data locally",
    "section": "Dynamic caching using httpuv and BiocFileCache",
    "text": "Dynamic caching using httpuv and BiocFileCache\nBoth the database and local mirroring options can get outdated when CDC releases new files or updates old ones. The BiocFileCache package can cache downloaded files locally in a persistent manner, updating them automatically when the source file has been updated. The experimental cachehttp package uses the BiocFileCache package in conjunction with the httpuv package to run a local server that downloads files from the CDC website the first time they are requested, but uses the cache for subsequent requests.\nTo use this package, first install it using\nBiocManager::install(\"BiocFileCache\")\nremotes::install_github(\"ccb-hms/cachehttp\")\nThen, run the following in a separate R session.\nrequire(cachehttp)\nadd_cache(\"cdc\", \"https://wwwn.cdc.gov\",\n          fun = function(x) {\n              x &lt;- tolower(x)\n              endsWith(x, \".htm\") || endsWith(x, \".xpt\")\n          })\ns &lt;- start_cache(host = \"0.0.0.0\", port = 8080,\n                 static_path = BiocFileCache::bfccache(BiocFileCache::BiocFileCache()))\n## stopServer(s) # to stop the httpuv server\nThis session must be kept active for the server to work. It can even run on a different machine, as long as it is accessible via the specified port. It does not require the nhanesA package to work.\nWhile the server is running, we can set (in a different R session)\nSys.setenv(NHANES_TABLE_BASE = \"http://127.0.0.1:8080/cdc\")\n(changing host IP and port as necessary) to use this server instead of the primary CDC website to serve XPT and htm files. Although the each file is downloaded from the CDC website the first time it is requested, subsequent “downloads” should be faster."
  }
]